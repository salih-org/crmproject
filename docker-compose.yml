version: '3.1'

services:
  s_crm_api_gateway:
    image: salihcantekin/crmapigateway:latest
    ports:
      - 80:1000
    networks:
      - net_crm
    deploy:
      placement:
        constraints:
          - node.role == manager
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 3
    build:
      context: .
      dockerfile: ApiGateways/Crm.API.Gateway/Dockerfile





  s_contact_service_db:
    image: salihcantekin/postgres
    ports:
     - 2345:5432
    networks:
     - net_crm
    environment:
     - PGDATA=/var/lib/postgresql/data/pgdata
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD_FILE=/run/secrets/sec_contact_db_pass
    volumes:
     - /mnt/nfs_shares/docker_app_data/postgresql/contact_service:/var/lib/postgresql/data
    deploy:
     replicas: 1
     restart_policy:
       max_attempts: 3
       condition: on-failure
     placement: 
      constraints: 
        - node.role == worker
        
  s_contact_service_api:
    image: salihcantekin/contactapi
    ports:
      - 90:1000
    networks:
      - net_crm
    deploy:
     replicas: 1
     restart_policy:
       max_attempts: 3
       condition: on-failure
     placement: 
      constraints: 
        - node.role == worker
    secrets:
      - sec_contact_db_conn_str
    environment:
      - ASPNET_ENVIRONMENT=Production
      - ConnectionStrings__Postgresql=/run/secrets/sec_contact_db_conn_str
    depends_on:
      - s_contact_service_db
      - s_crm_api_gateway
    build:
      context: .
      dockerfile: Services/ContactService/Crm.API.Service.Contact/Dockerfile




  s_reservation_service_db:
    image: salihcantekin/postgres
    ports:
     - 2346:5432
    networks:
     - net_crm
    environment:
     - PGDATA=/var/lib/postgresql/data/pgdata
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD_FILE=/run/secrets/sec_reservation_db_pass
    volumes:
     - /mnt/nfs_shares/docker_app_data/postgresql/reservation_service:/var/lib/postgresql/data
    deploy:
     replicas: 1
     restart_policy:
       max_attempts: 3
       condition: on-failure
     placement: 
      constraints: 
        - node.role == worker

  s_reservation_service_api:
    image: salihcantekin/reservationapi
    ports:
      - 91:1000
    networks:
      - net_crm
    deploy:
     replicas: 1
     restart_policy:
       max_attempts: 3
       condition: on-failure
     placement: 
      constraints: 
        - node.role == worker
    secrets:
      - sec_reservation_db_conn_str
    environment:
      - ASPNET_ENVIRONMENT=Production
      - ConnectionStrings__Postgresql=/run/secrets/sec_reservation_db_conn_str
    depends_on:
      - s_reservation_service_db
      - s_crm_api_gateway
    build:
      context: .
      dockerfile: Services/ReservationService/Crm.API.Service.Reservation/Dockerfile


networks:
  net_crm:

secrets:
  sec_contact_db_pass:
    external: true
  sec_reservation_db_pass:
    external: true
  
  sec_reservation_db_conn_str:
    external: true
  sec_contact_db_conn_str:
    external: true
